{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDay = isDay;\nexports.isMonth = isMonth;\nexports.isYear = isYear;\nexports.leapYear = leapYear;\nexports.isLeapYear = isLeapYear;\nexports.sameDate = sameDate;\nexports.changedDate = changedDate;\nvar MAX_DATE = new Date(8640000000000000);\nvar MIN_DATE = new Date(-8640000000000000);\n\nfunction isDay(day) {\n  return Number.isInteger(day) && day >= 1 && day <= 31;\n}\n\nfunction isMonth(month) {\n  return Number.isInteger(month) && month >= 0 && month < 12;\n}\n\nfunction isYear(year) {\n  return Number.isInteger(year) && year >= MIN_DATE.getFullYear() && year <= MAX_DATE.getFullYear();\n}\n\nfunction leapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction isLeapYear(year) {\n  return isYear(year) && leapYear(year);\n}\n\nfunction sameDate(one, other) {\n  return one.getDate() === other.getDate() && one.getMonth() === other.getMonth() && one.getFullYear() === other.getFullYear();\n}\n\nfunction changedDate(one, other) {\n  return one instanceof Date !== other instanceof Date || one instanceof Date && other instanceof Date && !sameDate(one, other);\n}","map":{"version":3,"sources":["validations.ts"],"names":["MAX_DATE","MIN_DATE","Number","day","month","year","isYear","leapYear","one","other","sameDate"],"mappings":";;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG,IAAA,IAAA,CAAjB,gBAAiB,CAAjB;AACA,IAAMC,QAAQ,GAAG,IAAA,IAAA,CAAS,CAA1B,gBAAiB,CAAjB;;AAEO,SAAA,KAAA,CAAA,GAAA,EAA4B;AACjC,SAAOC,MAAM,CAANA,SAAAA,CAAAA,GAAAA,KAAyBC,GAAG,IAA5BD,CAAAA,IAAqCC,GAAG,IAA/C,EAAA;AAGK;;AAAA,SAAA,OAAA,CAAA,KAAA,EAAgC;AACrC,SAAOD,MAAM,CAANA,SAAAA,CAAAA,KAAAA,KAA2BE,KAAK,IAAhCF,CAAAA,IAAyCE,KAAK,GAArD,EAAA;AAGK;;AAAA,SAAA,MAAA,CAAA,IAAA,EAA8B;AACnC,SACEF,MAAM,CAANA,SAAAA,CAAAA,IAAAA,KACAG,IAAI,IAAIJ,QAAQ,CADhBC,WACQD,EADRC,IAEAG,IAAI,IAAIL,QAAQ,CAHlB,WAGUA,EAHV;AAOK;;AAAA,SAAA,QAAA,CAAA,IAAA,EAAgC;AACrC,SAAQK,IAAI,GAAJA,CAAAA,KAAAA,CAAAA,IAAkBA,IAAI,GAAJA,GAAAA,KAAnB,CAACA,IAAuCA,IAAI,GAAJA,GAAAA,KAA/C,CAAA;AAGK;;AAAA,SAAA,UAAA,CAAA,IAAA,EAAkC;AACvC,SAAOC,MAAM,CAANA,IAAM,CAANA,IAAgBC,QAAQ,CAA/B,IAA+B,CAA/B;AAGK;;AAAA,SAAA,QAAA,CAAA,GAAA,EAAA,KAAA,EAA0C;AAC/C,SACEC,GAAG,CAAHA,OAAAA,OAAkBC,KAAK,CAAvBD,OAAkBC,EAAlBD,IACAA,GAAG,CAAHA,QAAAA,OAAmBC,KAAK,CADxBD,QACmBC,EADnBD,IAEAA,GAAG,CAAHA,WAAAA,OAAsBC,KAAK,CAH7B,WAGwBA,EAHxB;AAOK;;AAAA,SAAA,WAAA,CAAA,GAAA,EAAA,KAAA,EAA+C;AACpD,SACED,GAAG,YAAHA,IAAAA,KAAwBC,KAAK,YAA7BD,IAAAA,IACCA,GAAG,YAAHA,IAAAA,IAAuBC,KAAK,YAA5BD,IAAAA,IAAgD,CAACE,QAAQ,CAAA,GAAA,EAF5D,KAE4D,CAF5D;AAID","sourcesContent":["const MAX_DATE = new Date(8640000000000000);\nconst MIN_DATE = new Date(-8640000000000000);\n\nexport function isDay(day: number) {\n  return Number.isInteger(day) && day >= 1 && day <= 31;\n}\n\nexport function isMonth(month: number) {\n  return Number.isInteger(month) && month >= 0 && month < 12;\n}\n\nexport function isYear(year: number) {\n  return (\n    Number.isInteger(year) &&\n    year >= MIN_DATE.getFullYear() &&\n    year <= MAX_DATE.getFullYear()\n  );\n}\n\nexport function leapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nexport function isLeapYear(year: number) {\n  return isYear(year) && leapYear(year);\n}\n\nexport function sameDate(one: Date, other: Date) {\n  return (\n    one.getDate() === other.getDate() &&\n    one.getMonth() === other.getMonth() &&\n    one.getFullYear() === other.getFullYear()\n  );\n}\n\nexport function changedDate(one?: Date, other?: Date) {\n  return (\n    one instanceof Date !== other instanceof Date ||\n    (one instanceof Date && other instanceof Date && !sameDate(one, other))\n  );\n}\n"]},"metadata":{},"sourceType":"script"}