{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport moment from 'moment';\nimport Month from \"./Month\";\nimport { isValidDate } from \"../utils/date\";\nvar NUMBER_OF_MONTHS = 12;\nvar MONTH_HEIGHT = 370;\nvar INITIAL_LIST_SIZE = 2;\nvar VIEWABLE_RANGE_OFFSET = 5;\nvar VIEWABILITY_CONFIG = {\n  waitForInteraction: true,\n  itemVisiblePercentThreshold: 10,\n  minimumViewTime: 32\n};\n\nvar Calendar = function (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"listReference\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getItemLayout\", function (_data, index) {\n      return {\n        length: _this.props.monthHeight,\n        offset: _this.props.monthHeight * index,\n        index: index\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"keyExtractor\", function (_item, index) {\n      return String(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleViewableItemsChange\", function (info) {\n      if (_this.props.viewableItemsChanged) {\n        _this.props.viewableItemsChanged(info);\n      }\n\n      var viewableItems = info.viewableItems;\n\n      if (viewableItems.length > 0) {\n        var firstViewableItem = viewableItems[0],\n            l = viewableItems.length,\n            lastViewableItem = viewableItems[l - 1];\n        var _this$state = _this.state,\n            firstViewableIndex = _this$state.firstViewableIndex,\n            lastViewableIndex = _this$state.lastViewableIndex;\n\n        if (firstViewableIndex !== firstViewableItem.index || lastViewableIndex !== lastViewableItem.index) {\n          _this.setState({\n            firstViewableIndex: firstViewableItem.index,\n            lastViewableIndex: lastViewableItem.index + VIEWABLE_RANGE_OFFSET\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePressDay\", function (date) {\n      var _this$state2 = _this.state,\n          startDate = _this$state2.startDate,\n          endDate = _this$state2.endDate;\n      var newStartDate;\n      var newEndDate;\n\n      if (_this.props.disableRange) {\n        newStartDate = date;\n        newEndDate = undefined;\n      } else if (startDate) {\n        if (endDate) {\n          newStartDate = date;\n          newEndDate = undefined;\n        } else if (date < startDate) {\n          newStartDate = date;\n        } else if (date > startDate) {\n          newStartDate = startDate;\n          newEndDate = date;\n        } else {\n          newStartDate = date;\n          newEndDate = date;\n        }\n      } else {\n        newStartDate = date;\n      }\n\n      var newRange = {\n        startDate: newStartDate,\n        endDate: newEndDate\n      };\n\n      _this.setState(newRange, function () {\n        return _this.props.onChange(newRange);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setReference\", function (ref) {\n      if (ref) {\n        _this.listReference = ref;\n\n        if (_this.props.calendarListRef) {\n          _this.props.calendarListRef(ref);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMonthIndex\", function (date, months, firstMonthToRender) {\n      var numberOfMonths = _this.props.numberOfMonths;\n      var firstMonth = moment(firstMonthToRender);\n      var lastMonth = firstMonth.clone().add(numberOfMonths, 'months');\n\n      if (date >= firstMonth.toDate() && date <= lastMonth.endOf('month').toDate()) {\n        var monthIndex = moment(date).diff(firstMonth, 'months');\n\n        if (monthIndex >= 0 && monthIndex <= months.length) {\n          return monthIndex;\n        }\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMonth\", function (_ref) {\n      var index = _ref.index;\n      var firstMonthToRender = _this.state.firstMonthToRender;\n      var month = moment(firstMonthToRender).add(index, 'months');\n      return React.createElement(Month, {\n        month: month.month(),\n        year: month.year(),\n        index: index,\n        firstMonthToRender: _this.state.firstMonthToRender,\n        monthNames: _this.props.monthNames,\n        onPress: _this.handlePressDay,\n        theme: _this.props.theme,\n        showWeekdays: _this.props.showWeekdays,\n        showMonthTitle: _this.props.showMonthTitle,\n        locale: _this.props.locale,\n        dayNames: _this.props.dayNames,\n        height: _this.props.monthHeight,\n        firstDayMonday: _this.props.firstDayMonday,\n        renderDayContent: _this.props.renderDayContent,\n        minDate: _this.props.minDate,\n        maxDate: _this.props.maxDate,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate,\n        disableRange: _this.props.disableRange,\n        disabledDays: _this.props.disabledDays,\n        disableOffsetDays: _this.props.disableOffsetDays,\n        firstViewableIndex: _this.state.firstViewableIndex,\n        lastViewableIndex: _this.state.lastViewableIndex,\n        viewableRangeOffset: _this.props.viewableRangeOffset\n      });\n    });\n\n    _this.state = {\n      firstMonthToRender: new Date(),\n      months: [],\n      initialScrollIndex: 0,\n      startDate: undefined,\n      endDate: undefined,\n      firstViewableIndex: 0,\n      lastViewableIndex: INITIAL_LIST_SIZE + props.viewableRangeOffset\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      var _this$props = this.props,\n          numberOfMonths = _this$props.numberOfMonths,\n          startingMonth = _this$props.startingMonth,\n          startDate = _this$props.startDate,\n          endDate = _this$props.endDate;\n      var firstMonthToRender = this.state.firstMonthToRender;\n\n      if (startingMonth && isValidDate(new Date(startingMonth))) {\n        firstMonthToRender = moment(startingMonth, 'YYYY-MM-DD').toDate();\n      }\n\n      var start;\n\n      if (startDate && isValidDate(new Date(startDate))) {\n        start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n        if (start > moment(firstMonthToRender).add(numberOfMonths, 'months').toDate()) {\n          start = undefined;\n        }\n      }\n\n      var end = endDate && isValidDate(new Date(endDate)) ? moment(endDate, 'YYYY-MM-DD').toDate() : undefined;\n      var months = new Array(numberOfMonths);\n      var firstMonthIndex = 0;\n\n      if (start) {\n        var monthIndex = this.getMonthIndex(start, months, firstMonthToRender);\n\n        if (monthIndex !== null) {\n          firstMonthIndex = monthIndex;\n        }\n      }\n\n      this.setState({\n        firstMonthToRender: firstMonthToRender,\n        initialScrollIndex: firstMonthIndex,\n        months: months,\n        startDate: start,\n        endDate: end\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          startDate = _this$state3.startDate,\n          months = _this$state3.months,\n          firstMonthToRender = _this$state3.firstMonthToRender;\n      var nextStartDate = nextProps.startDate && nextProps.startDate instanceof Date ? nextProps.startDate : undefined;\n      var endDate = nextProps.endDate && nextProps.endDate instanceof Date ? nextProps.endDate : undefined;\n\n      if (startDate !== nextStartDate || this.state.endDate !== endDate) {\n        this.setState({\n          startDate: nextStartDate,\n          endDate: endDate\n        }, function () {\n          if (_this2.listReference && nextStartDate && startDate !== nextStartDate) {\n            var monthIndex = _this2.getMonthIndex(nextStartDate, months, firstMonthToRender);\n\n            if (monthIndex !== null) {\n              _this2.listReference.scrollToIndex({\n                index: monthIndex\n              });\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.months.length !== nextState.months.length || this.state.startDate !== nextState.startDate || this.state.firstViewableIndex !== nextState.firstViewableIndex || this.state.lastViewableIndex !== nextState.lastViewableIndex || this.state.endDate !== nextState.endDate || this.props.minDate !== nextProps.minDate || this.props.maxDate !== nextProps.maxDate || this.props.startingMonth !== nextProps.startingMonth || this.props.renderDayContent !== nextProps.renderDayContent;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FlatList, {\n        getItemLayout: this.getItemLayout,\n        initialScrollIndex: this.state.initialScrollIndex,\n        viewabilityConfig: VIEWABILITY_CONFIG,\n        removeClippedSubviews: true,\n        onViewableItemsChanged: this.handleViewableItemsChange,\n        initialNumToRender: this.props.initialListSize,\n        keyExtractor: this.keyExtractor,\n        renderItem: this.renderMonth,\n        extraData: _objectSpread(_objectSpread({}, this.state), {}, {\n          minDate: this.props.minDate,\n          maxDate: this.props.maxDate\n        }),\n        data: this.state.months,\n        ref: this.setReference\n      });\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nexport { Calendar as default };\n\n_defineProperty(Calendar, \"defaultProps\", {\n  numberOfMonths: NUMBER_OF_MONTHS,\n  startingMonth: moment().format('YYYY-MM-DD'),\n  initialListSize: INITIAL_LIST_SIZE,\n  showWeekdays: true,\n  showMonthTitle: true,\n  theme: {},\n  locale: 'en',\n  monthNames: [],\n  dayNames: [],\n  disableRange: false,\n  firstDayMonday: false,\n  monthHeight: MONTH_HEIGHT,\n  disableOffsetDays: false,\n  viewableRangeOffset: VIEWABLE_RANGE_OFFSET\n});","map":{"version":3,"sources":["Calendar.tsx"],"names":["NUMBER_OF_MONTHS","MONTH_HEIGHT","INITIAL_LIST_SIZE","VIEWABLE_RANGE_OFFSET","VIEWABILITY_CONFIG","waitForInteraction","itemVisiblePercentThreshold","minimumViewTime","Calendar","React","numberOfMonths","startingMonth","moment","initialListSize","showWeekdays","showMonthTitle","theme","locale","monthNames","dayNames","disableRange","firstDayMonday","monthHeight","disableOffsetDays","viewableRangeOffset","constructor","firstMonthToRender","months","initialScrollIndex","startDate","endDate","firstViewableIndex","lastViewableIndex","props","isValidDate","start","end","firstMonthIndex","monthIndex","nextStartDate","nextProps","index","nextState","length","offset","String","info","viewableItems","l","lastViewableItem","firstViewableItem","date","newStartDate","newEndDate","newRange","ref","firstMonth","lastMonth","month","minDate","maxDate","setReference"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FlatList } from 'react-native';\nimport moment from 'moment';\n\nimport Month from './Month';\nimport { isValidDate } from '../utils/date';\nimport { CalendarProps, ViewableItemsType } from '../types';\n\ninterface State {\n  firstMonthToRender: Date;\n  months: any[];\n  firstViewableIndex: number;\n  lastViewableIndex: number;\n  initialScrollIndex: number;\n  startDate?: Date;\n  endDate?: Date;\n}\n\nconst NUMBER_OF_MONTHS = 12;\nconst MONTH_HEIGHT = 370;\nconst INITIAL_LIST_SIZE = 2;\nconst VIEWABLE_RANGE_OFFSET = 5;\n\nconst VIEWABILITY_CONFIG = {\n  waitForInteraction: true,\n  itemVisiblePercentThreshold: 10,\n  minimumViewTime: 32,\n};\n\nexport default class Calendar extends React.Component<CalendarProps, State> {\n  static defaultProps = {\n    numberOfMonths: NUMBER_OF_MONTHS,\n    startingMonth: moment().format('YYYY-MM-DD'),\n    initialListSize: INITIAL_LIST_SIZE,\n    showWeekdays: true,\n    showMonthTitle: true,\n    theme: {},\n    locale: 'en',\n    monthNames: [],\n    dayNames: [],\n    disableRange: false,\n    firstDayMonday: false,\n    monthHeight: MONTH_HEIGHT,\n    disableOffsetDays: false,\n    viewableRangeOffset: VIEWABLE_RANGE_OFFSET,\n  };\n\n  constructor(props: CalendarProps) {\n    super(props);\n\n    this.state = {\n      firstMonthToRender: new Date(),\n      months: [],\n      initialScrollIndex: 0,\n      startDate: undefined,\n      endDate: undefined,\n      firstViewableIndex: 0,\n      lastViewableIndex: INITIAL_LIST_SIZE + props.viewableRangeOffset!,\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { numberOfMonths, startingMonth, startDate, endDate } = this.props;\n    let { firstMonthToRender } = this.state;\n\n    if (startingMonth && isValidDate(new Date(startingMonth))) {\n      firstMonthToRender = moment(startingMonth, 'YYYY-MM-DD').toDate();\n    }\n\n    let start: Date | undefined;\n\n    if (startDate && isValidDate(new Date(startDate))) {\n      start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n      if (\n        start >\n        moment(firstMonthToRender).add(numberOfMonths, 'months').toDate()\n      ) {\n        start = undefined;\n      }\n    }\n\n    const end =\n      endDate && isValidDate(new Date(endDate))\n        ? moment(endDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    const months = new Array(numberOfMonths);\n\n    let firstMonthIndex = 0;\n\n    if (start) {\n      const monthIndex = this.getMonthIndex(start, months, firstMonthToRender);\n      if (monthIndex !== null) {\n        firstMonthIndex = monthIndex;\n      }\n    }\n\n    this.setState({\n      firstMonthToRender,\n      initialScrollIndex: firstMonthIndex,\n      months,\n      startDate: start,\n      endDate: end,\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CalendarProps) {\n    const { startDate, months, firstMonthToRender } = this.state;\n    const nextStartDate =\n      nextProps.startDate && nextProps.startDate instanceof Date\n        ? nextProps.startDate\n        : undefined;\n    const endDate =\n      nextProps.endDate && nextProps.endDate instanceof Date\n        ? nextProps.endDate\n        : undefined;\n\n    if (startDate !== nextStartDate || this.state.endDate !== endDate) {\n      this.setState(\n        {\n          startDate: nextStartDate,\n          endDate,\n        },\n        () => {\n          if (\n            this.listReference &&\n            nextStartDate &&\n            startDate !== nextStartDate\n          ) {\n            const monthIndex = this.getMonthIndex(\n              nextStartDate,\n              months,\n              firstMonthToRender\n            );\n            if (monthIndex !== null) {\n              this.listReference.scrollToIndex({ index: monthIndex });\n            }\n          }\n        }\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: CalendarProps, nextState: State): boolean {\n    return (\n      this.state.months.length !== nextState.months.length ||\n      this.state.startDate !== nextState.startDate ||\n      this.state.firstViewableIndex !== nextState.firstViewableIndex ||\n      this.state.lastViewableIndex !== nextState.lastViewableIndex ||\n      this.state.endDate !== nextState.endDate ||\n      this.props.minDate !== nextProps.minDate ||\n      this.props.maxDate !== nextProps.maxDate ||\n      this.props.startingMonth !== nextProps.startingMonth ||\n      this.props.renderDayContent !== nextProps.renderDayContent\n    );\n  }\n\n  private listReference?: FlatList<any> | null | undefined;\n\n  getItemLayout = (\n    _data: any,\n    index: number\n  ): { length: number; offset: number; index: number } => ({\n    length: this.props.monthHeight,\n    offset: this.props.monthHeight * index,\n    index,\n  });\n\n  keyExtractor = (_item: any, index: number): string => String(index);\n\n  handleViewableItemsChange = (info: ViewableItemsType) => {\n    if (this.props.viewableItemsChanged) {\n      this.props.viewableItemsChanged(info);\n    }\n\n    const { viewableItems } = info;\n\n    if (viewableItems.length > 0) {\n      const {\n        0: firstViewableItem,\n        length: l,\n        [l - 1]: lastViewableItem,\n      } = viewableItems;\n\n      const { firstViewableIndex, lastViewableIndex } = this.state;\n      if (\n        firstViewableIndex !== firstViewableItem.index ||\n        lastViewableIndex !== lastViewableItem.index\n      ) {\n        this.setState({\n          firstViewableIndex: firstViewableItem.index!,\n          lastViewableIndex: lastViewableItem.index! + VIEWABLE_RANGE_OFFSET,\n        });\n      }\n    }\n  };\n\n  handlePressDay = (date: Date) => {\n    const { startDate, endDate } = this.state;\n    let newStartDate;\n    let newEndDate;\n\n    if (this.props.disableRange) {\n      newStartDate = date;\n      newEndDate = undefined;\n    } else if (startDate) {\n      if (endDate) {\n        newStartDate = date;\n        newEndDate = undefined;\n      } else if (date < startDate!) {\n        newStartDate = date;\n      } else if (date > startDate!) {\n        newStartDate = startDate;\n        newEndDate = date;\n      } else {\n        newStartDate = date;\n        newEndDate = date;\n      }\n    } else {\n      newStartDate = date;\n    }\n\n    const newRange = {\n      startDate: newStartDate as Date,\n      endDate: newEndDate,\n    };\n\n    this.setState(newRange, () => this.props.onChange(newRange));\n  };\n\n  setReference = (ref: any) => {\n    if (ref) {\n      this.listReference = ref;\n      if (this.props.calendarListRef) {\n        this.props.calendarListRef(ref);\n      }\n    }\n  };\n\n  getMonthIndex = (date: Date, months: any[], firstMonthToRender: Date) => {\n    const { numberOfMonths } = this.props;\n\n    const firstMonth = moment(firstMonthToRender);\n    const lastMonth = firstMonth.clone().add(numberOfMonths, 'months');\n\n    if (\n      date >= firstMonth.toDate() &&\n      date <= lastMonth.endOf('month').toDate()\n    ) {\n      const monthIndex = moment(date).diff(firstMonth, 'months');\n\n      if (monthIndex >= 0 && monthIndex <= months.length) {\n        return monthIndex;\n      }\n    }\n\n    return null;\n  };\n\n  renderMonth = ({ index }: { index: number }) => {\n    const { firstMonthToRender } = this.state;\n    const month = moment(firstMonthToRender).add(index, 'months');\n\n    return (\n      <Month\n        month={month.month()}\n        year={month.year()}\n        index={index}\n        firstMonthToRender={this.state.firstMonthToRender}\n        monthNames={this.props.monthNames}\n        onPress={this.handlePressDay}\n        theme={this.props.theme}\n        showWeekdays={this.props.showWeekdays}\n        showMonthTitle={this.props.showMonthTitle}\n        locale={this.props.locale}\n        dayNames={this.props.dayNames}\n        height={this.props.monthHeight}\n        firstDayMonday={this.props.firstDayMonday}\n        renderDayContent={this.props.renderDayContent}\n        minDate={this.props.minDate}\n        maxDate={this.props.maxDate}\n        startDate={this.state.startDate}\n        endDate={this.state.endDate}\n        disableRange={this.props.disableRange}\n        disabledDays={this.props.disabledDays}\n        disableOffsetDays={this.props.disableOffsetDays}\n        firstViewableIndex={this.state.firstViewableIndex}\n        lastViewableIndex={this.state.lastViewableIndex}\n        viewableRangeOffset={this.props.viewableRangeOffset!}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <FlatList\n        getItemLayout={this.getItemLayout}\n        initialScrollIndex={this.state.initialScrollIndex}\n        viewabilityConfig={VIEWABILITY_CONFIG}\n        removeClippedSubviews\n        onViewableItemsChanged={this.handleViewableItemsChange}\n        initialNumToRender={this.props.initialListSize}\n        keyExtractor={this.keyExtractor}\n        renderItem={this.renderMonth}\n        extraData={{\n          ...this.state,\n          minDate: this.props.minDate,\n          maxDate: this.props.maxDate,\n        }}\n        data={this.state.months}\n        ref={this.setReference}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}