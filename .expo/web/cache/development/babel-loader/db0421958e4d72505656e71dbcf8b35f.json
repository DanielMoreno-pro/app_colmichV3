{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _date = require(\"../../utils/date\");\n\nvar _utils = require(\"../utils\");\n\nvar _WeekDays = _interopRequireDefault(require(\"../WeekDays\"));\n\nvar _Day = _interopRequireDefault(require(\"../Day\"));\n\nvar _jsxFileName = \"/Users/maggialejandro/Documents/GitHub/react-native-month/src/components/Month/index.tsx\";\n\nvar _default = _react.default.memo(function (props) {\n  var month = props.month,\n      year = props.year,\n      onPress = props.onPress,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? 'en' : _props$locale,\n      dayNames = props.dayNames,\n      showWeekdays = props.showWeekdays,\n      _props$disabledDays = props.disabledDays,\n      disabledDays = _props$disabledDays === void 0 ? {} : _props$disabledDays,\n      _props$disableRange = props.disableRange,\n      disableRange = _props$disableRange === void 0 ? false : _props$disableRange,\n      _props$disableOffsetD = props.disableOffsetDays,\n      disableOffsetDays = _props$disableOffsetD === void 0 ? false : _props$disableOffsetD,\n      _props$firstDayMonday = props.firstDayMonday,\n      firstDayMonday = _props$firstDayMonday === void 0 ? true : _props$firstDayMonday,\n      startDate = props.startDate,\n      endDate = props.endDate,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      renderDayContent = props.renderDayContent;\n  var DAY_NAMES = Array.isArray(dayNames) && dayNames.length === 7 ? dayNames : (0, _date.getDayNames)(locale, firstDayMonday);\n  var days = (0, _utils.getMonthDays)(month, year, firstDayMonday, disableRange, disabledDays, disableOffsetDays, startDate, endDate, minDate, maxDate);\n  var weeks = [];\n\n  while (days.length) {\n    weeks.push(days.splice(0, 7));\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, showWeekdays && _react.default.createElement(_WeekDays.default, {\n    days: DAY_NAMES,\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }), weeks.map(function (week, index) {\n    return _react.default.createElement(_reactNative.View, {\n      key: String(index),\n      style: {\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      }\n    }, week.map(function (day) {\n      return _react.default.createElement(_Day.default, {\n        key: day.id,\n        item: day,\n        onPress: onPress,\n        theme: theme,\n        renderDayContent: renderDayContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      });\n    }));\n  }));\n}, _utils.areEqual);\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["React","month","year","onPress","locale","dayNames","showWeekdays","disabledDays","disableRange","disableOffsetDays","firstDayMonday","startDate","endDate","minDate","maxDate","theme","renderDayContent","props","DAY_NAMES","Array","days","weeks","String","flexDirection","week","day","areEqual"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { DayType, MonthProps } from '../../types';\nimport { getDayNames } from '../../utils/date';\nimport { getMonthDays, areEqual } from '../utils';\nimport WeekDays from '../WeekDays';\nimport Day from '../Day';\n\nexport default React.memo<MonthProps>((props: MonthProps) => {\n  const {\n    month,\n    year,\n    onPress,\n    locale = 'en',\n    dayNames,\n    showWeekdays,\n    disabledDays = {},\n    disableRange = false,\n    disableOffsetDays = false,\n    firstDayMonday = true,\n    startDate,\n    endDate,\n    minDate,\n    maxDate,\n    theme = {},\n    renderDayContent,\n  } = props;\n\n  const DAY_NAMES =\n    Array.isArray(dayNames) && dayNames.length === 7\n      ? dayNames\n      : getDayNames(locale, firstDayMonday);\n\n  const days = getMonthDays(\n    month,\n    year,\n    firstDayMonday,\n    disableRange,\n    disabledDays,\n    disableOffsetDays,\n    startDate,\n    endDate,\n    minDate,\n    maxDate\n  );\n\n  const weeks = [];\n\n  while (days.length) {\n    weeks.push(days.splice(0, 7));\n  }\n\n  return (\n    <>\n      {showWeekdays && <WeekDays days={DAY_NAMES} theme={theme} />}\n      {weeks.map((week: DayType[], index: number) => (\n        <View key={String(index)} style={{ flexDirection: 'row' }}>\n          {week.map((day: DayType) => (\n            <Day\n              key={day.id}\n              item={day}\n              onPress={onPress}\n              theme={theme}\n              renderDayContent={renderDayContent}\n            />\n          ))}\n        </View>\n      ))}\n    </>\n  );\n}, areEqual);\n"]},"metadata":{},"sourceType":"script"}