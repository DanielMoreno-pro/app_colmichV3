{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _jsxFileName = \"/Users/maggialejandro/Documents/GitHub/react-native-month/src/components/WeekDays/index.tsx\";\nvar SHOULD_NOT_UPDATE = true;\n\nvar WeekColumn = _react.default.memo(function (props) {\n  return _react.default.createElement(_reactNative.View, {\n    style: [{\n      flex: 1,\n      alignItems: 'center'\n    }, props.theme.weekColumnStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    allowFontScaling: false,\n    style: props.theme.weekColumnTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    }\n  }, props.day));\n}, function () {\n  return SHOULD_NOT_UPDATE;\n});\n\nvar _default = _react.default.memo(function (props) {\n  return _react.default.createElement(_reactNative.View, {\n    style: [{\n      flexDirection: 'row'\n    }, props.theme.weekColumnsContainerStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    }\n  }, props.days.map(function (day) {\n    return _react.default.createElement(WeekColumn, {\n      key: day,\n      day: day,\n      theme: props.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      }\n    });\n  }));\n}, function () {\n  return SHOULD_NOT_UPDATE;\n});\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["SHOULD_NOT_UPDATE","WeekColumn","React","flex","alignItems","props","flexDirection"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;AAIA,IAAMA,iBAAiB,GAAvB,IAAA;;AAOA,IAAMC,UAAU,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CACjB,UAAA,KAAA,EAAA;AAAA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAN,CAAA;AAAWC,MAAAA,UAAU,EAAtB;AAAC,KAAD,EAAoCC,KAAK,CAALA,KAAAA,CAD7C,eACS,CADT;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EAGE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,gBAAgB,EAAtB,KAAA;AAA+B,IAAA,KAAK,EAAEA,KAAK,CAALA,KAAAA,CAAtC,mBAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EACGA,KAAK,CALZ,GAII,CAHF,CADF;AADiBH,CAAAA,EAUjB,YAAA;AAAA,SAAA,iBAAA;AAVF,CAAmBA,CAAnB;;eAkBeA,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CACb,UAAA,KAAA,EAAA;AAAA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CAAC;AAAEI,MAAAA,aAAa,EAAhB;AAAC,KAAD,EAA2BD,KAAK,CAALA,KAAAA,CADpC,yBACS,CADT;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EAGGA,KAAK,CAALA,IAAAA,CAAAA,GAAAA,CAAe,UAAA,GAAA,EAAA;AAAA,WACd,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,MAAA,GAAG,EAAf,GAAA;AAAsB,MAAA,GAAG,EAAzB,GAAA;AAAgC,MAAA,KAAK,EAAEA,KAAK,CAA5C,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EADc;AACd;AAAA,KAAA,CADc;AAJpB,GAIKA,CAHH,CADF;AADaH,CAAAA,EAUb,YAAA;AAAA,SAAA,iBAAA;AAVaA,CAAAA,C","sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { ThemeType } from '../../types';\n\nconst SHOULD_NOT_UPDATE = true;\n\ninterface WeekColumnProps {\n  day: string;\n  theme: ThemeType;\n}\n\nconst WeekColumn = React.memo<WeekColumnProps>(\n  (props: WeekColumnProps) => (\n    <View\n      style={[{ flex: 1, alignItems: 'center' }, props.theme.weekColumnStyle]}\n    >\n      <Text allowFontScaling={false} style={props.theme.weekColumnTextStyle}>\n        {props.day}\n      </Text>\n    </View>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n\ninterface WeekColumnsProps {\n  days: string[];\n  theme: ThemeType;\n}\n\nexport default React.memo<WeekColumnsProps>(\n  (props: WeekColumnsProps) => (\n    <View\n      style={[{ flexDirection: 'row' }, props.theme.weekColumnsContainerStyle]}\n    >\n      {props.days.map((day: string) => (\n        <WeekColumn key={day} day={day} theme={props.theme} />\n      ))}\n    </View>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n"]},"metadata":{},"sourceType":"script"}