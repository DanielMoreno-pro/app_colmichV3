{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _jsxFileName = \"/Users/maggialejandro/Documents/GitHub/react-native-month/src/components/Day/index.tsx\";\n\nvar styles = _reactNative.StyleSheet.create({\n  activeDate: {\n    backgroundColor: '#3b5998'\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    flex: 1,\n    marginVertical: 5,\n    paddingVertical: 10\n  },\n  endDate: {\n    borderBottomRightRadius: 60,\n    borderTopRightRadius: 60\n  },\n  startDate: {\n    borderBottomLeftRadius: 60,\n    borderTopLeftRadius: 60\n  }\n});\n\nvar NonTouchableDay = _react.default.memo(function (props) {\n  var isMonthDate = props.isMonthDate,\n      isActive = props.isActive,\n      isOutOfRange = props.isOutOfRange,\n      isStartDate = props.isStartDate,\n      isEndDate = props.isEndDate,\n      theme = props.theme,\n      date = props.date,\n      isToday = props.isToday;\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, theme.dayContainerStyle, theme.nonTouchableDayContainerStyle, isToday && !isActive ? theme.todayContainerStyle : {}, isActive ? styles.activeDate : {}, isActive ? theme.activeDayContainerStyle : {}, isOutOfRange ? theme.dayOutOfRangeContainerStyle : {}, isStartDate ? styles.startDate : {}, isStartDate ? theme.startDateContainerStyle : {}, isEndDate ? styles.endDate : {}, isEndDate ? theme.endDateContainerStyle : {}],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [{\n      color: '#d3d3d3'\n    }, theme.nonTouchableDayTextStyle, isMonthDate ? theme.nonTouchableLastMonthDayTextStyle : {}, isToday ? theme.todayTextStyle : {}, isOutOfRange ? theme.dayOutOfRangeTextStyle : {}],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  }, date.getDate()));\n}, function (prevProps, nextProps) {\n  return prevProps.isActive === nextProps.isActive && prevProps.isVisible === nextProps.isVisible && prevProps.isStartDate === nextProps.isStartDate && prevProps.isEndDate === nextProps.isEndDate;\n});\n\nvar Day = _react.default.memo(function (props) {\n  var _props$item = props.item,\n      date = _props$item.date,\n      isVisible = _props$item.isVisible,\n      isActive = _props$item.isActive,\n      isStartDate = _props$item.isStartDate,\n      isEndDate = _props$item.isEndDate,\n      isMonthDate = _props$item.isMonthDate,\n      isOutOfRange = _props$item.isOutOfRange,\n      isToday = _props$item.isToday,\n      isHidden = _props$item.isHidden,\n      theme = props.theme;\n\n  if (isHidden) {\n    return _react.default.createElement(_reactNative.View, {\n      style: [styles.container],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      }\n    });\n  }\n\n  if (!isVisible) {\n    return _react.default.createElement(NonTouchableDay, {\n      isActive: isActive,\n      date: date,\n      theme: theme,\n      isMonthDate: isMonthDate,\n      isOutOfRange: isOutOfRange,\n      isStartDate: isStartDate,\n      isEndDate: isEndDate,\n      isVisible: isVisible,\n      isToday: isToday,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      }\n    });\n  }\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [styles.container, theme.dayContainerStyle, isToday && !isActive ? theme.todayContainerStyle : {}, isActive ? styles.activeDate : {}, isActive ? theme.activeDayContainerStyle : {}, isStartDate ? styles.startDate : {}, isStartDate ? theme.startDateContainerStyle : {}, isEndDate ? styles.endDate : {}, isEndDate ? theme.endDateContainerStyle : {}],\n    onPress: function onPress() {\n      return props.onPress(props.item.date);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    }\n  }, props.renderDayContent ? props.renderDayContent(props.item) : _react.default.createElement(_reactNative.Text, {\n    style: [{\n      color: isActive ? 'white' : 'black'\n    }, theme.dayTextStyle, isToday ? theme.todayTextStyle : {}, isActive ? theme.activeDayTextStyle : {}],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    }\n  }, date.getDate()));\n}, function (prevProps, nextProps) {\n  return prevProps.item.isActive === nextProps.item.isActive && prevProps.item.isVisible === nextProps.item.isVisible && prevProps.item.isStartDate === nextProps.item.isStartDate && prevProps.item.isEndDate === nextProps.item.isEndDate && prevProps.renderDayContent === nextProps.renderDayContent;\n});\n\nvar _default = Day;\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["styles","StyleSheet","activeDate","backgroundColor","container","alignItems","flex","marginVertical","paddingVertical","endDate","borderBottomRightRadius","borderTopRightRadius","startDate","borderBottomLeftRadius","borderTopLeftRadius","NonTouchableDay","React","isMonthDate","isActive","isOutOfRange","isStartDate","isEndDate","theme","date","isToday","props","color","prevProps","nextProps","Day","isVisible","isHidden"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;AAIA,IAAMA,MAAM,GAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAFc;AACnB,GADmB;AAI/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EADD,QAAA;AAETF,IAAAA,eAAe,EAFN,OAAA;AAGTG,IAAAA,IAAI,EAHK,CAAA;AAITC,IAAAA,cAAc,EAJL,CAAA;AAKTC,IAAAA,eAAe,EATc;AAIpB,GAJoB;AAW/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,uBAAuB,EADhB,EAAA;AAEPC,IAAAA,oBAAoB,EAbS;AAWtB,GAXsB;AAe/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,sBAAsB,EADb,EAAA;AAETC,IAAAA,mBAAmB,EAjBvB;AAea;AAfoB,CAAlBb,CAAf;;AAiCA,IAAMc,eAAe,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CACtB,UAAA,KAAA,EAAiC;AAAA,MAE7BC,WAF6B,GAU3BQ,KAV2B,CAAA,WAAA;AAAA,MAG7BP,QAH6B,GAU3BO,KAV2B,CAAA,QAAA;AAAA,MAI7BN,YAJ6B,GAU3BM,KAV2B,CAAA,YAAA;AAAA,MAK7BL,WAL6B,GAU3BK,KAV2B,CAAA,WAAA;AAAA,MAM7BJ,SAN6B,GAU3BI,KAV2B,CAAA,SAAA;AAAA,MAO7BH,KAP6B,GAU3BG,KAV2B,CAAA,KAAA;AAAA,MAQ7BF,IAR6B,GAU3BE,KAV2B,CAAA,IAAA;AAAA,MAS7BD,OAT6B,GAU3BC,KAV2B,CAAA,OAAA;AAY/B,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLzB,MAAM,CADD,SAAA,EAELsB,KAAK,CAFA,iBAAA,EAGLA,KAAK,CAHA,6BAAA,EAILE,OAAO,IAAI,CAAXA,QAAAA,GAAuBF,KAAK,CAA5BE,mBAAAA,GAJK,EAAA,EAKLN,QAAQ,GAAGlB,MAAM,CAAT,UAAA,GALH,EAAA,EAMLkB,QAAQ,GAAGI,KAAK,CAAR,uBAAA,GANH,EAAA,EAOLH,YAAY,GAAGG,KAAK,CAAR,2BAAA,GAPP,EAAA,EAQLF,WAAW,GAAGpB,MAAM,CAAT,SAAA,GARN,EAAA,EASLoB,WAAW,GAAGE,KAAK,CAAR,uBAAA,GATN,EAAA,EAULD,SAAS,GAAGrB,MAAM,CAAT,OAAA,GAVJ,EAAA,EAWLqB,SAAS,GAAGC,KAAK,CAAR,qBAAA,GAZb,EACS,CADT;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EAeE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACL;AAAEI,MAAAA,KAAK,EADF;AACL,KADK,EAELJ,KAAK,CAFA,wBAAA,EAGLL,WAAW,GAAGK,KAAK,CAAR,iCAAA,GAHN,EAAA,EAILE,OAAO,GAAGF,KAAK,CAAR,cAAA,GAJF,EAAA,EAKLH,YAAY,GAAGG,KAAK,CAAR,sBAAA,GANhB,EACS,CADT;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EASGC,IAAI,CAzBX,OAyBOA,EATH,CAfF,CADF;AAboBP,CAAAA,EA2CtB,UAAA,SAAA,EAAA,SAAA,EAA0B;AACxB,SACEW,SAAS,CAATA,QAAAA,KAAuBC,SAAS,CAAhCD,QAAAA,IACAA,SAAS,CAATA,SAAAA,KAAwBC,SAAS,CADjCD,SAAAA,IAEAA,SAAS,CAATA,WAAAA,KAA0BC,SAAS,CAFnCD,WAAAA,IAGAA,SAAS,CAATA,SAAAA,KAAwBC,SAAS,CAJnC,SAAA;AA5CJ,CAAwBZ,CAAxB;;AA4DA,IAAMa,GAAG,GAAGb,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CACV,UAAA,KAAA,EAAkB;AAAA,MAAA,WAAA,GAcZS,KAdY,CAAA,IAAA;AAAA,MAGZF,IAHY,GAAA,WAAA,CAAA,IAAA;AAAA,MAIZO,SAJY,GAAA,WAAA,CAAA,SAAA;AAAA,MAKZZ,QALY,GAAA,WAAA,CAAA,QAAA;AAAA,MAMZE,WANY,GAAA,WAAA,CAAA,WAAA;AAAA,MAOZC,SAPY,GAAA,WAAA,CAAA,SAAA;AAAA,MAQZJ,WARY,GAAA,WAAA,CAAA,WAAA;AAAA,MASZE,YATY,GAAA,WAAA,CAAA,YAAA;AAAA,MAUZK,OAVY,GAAA,WAAA,CAAA,OAAA;AAAA,MAWZO,QAXY,GAAA,WAAA,CAAA,QAAA;AAAA,MAadT,KAbc,GAcZG,KAdY,CAAA,KAAA;;AAgBhB,MAAA,QAAA,EAAc;AACZ,WAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,MAAA,KAAK,EAAE,CAACzB,MAAM,CAApB,SAAa,CAAb;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAP;AAAO;AAAA,KAAA,CAAP;AAGF;;AAAA,MAAI,CAAJ,SAAA,EAAgB;AACd,WACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACE,MAAA,QAAQ,EADV,QAAA;AAEE,MAAA,IAAI,EAFN,IAAA;AAGE,MAAA,KAAK,EAHP,KAAA;AAIE,MAAA,WAAW,EAJb,WAAA;AAKE,MAAA,YAAY,EALd,YAAA;AAME,MAAA,WAAW,EANb,WAAA;AAOE,MAAA,SAAS,EAPX,SAAA;AAQE,MAAA,SAAS,EARX,SAAA;AASE,MAAA,OAAO,EATT,OAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EADF;AACE;AAAA,KAAA,CADF;AAeF;;AAAA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,gBAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLA,MAAM,CADD,SAAA,EAELsB,KAAK,CAFA,iBAAA,EAGLE,OAAO,IAAI,CAAXA,QAAAA,GAAuBF,KAAK,CAA5BE,mBAAAA,GAHK,EAAA,EAILN,QAAQ,GAAGlB,MAAM,CAAT,UAAA,GAJH,EAAA,EAKLkB,QAAQ,GAAGI,KAAK,CAAR,uBAAA,GALH,EAAA,EAMLF,WAAW,GAAGpB,MAAM,CAAT,SAAA,GANN,EAAA,EAOLoB,WAAW,GAAGE,KAAK,CAAR,uBAAA,GAPN,EAAA,EAQLD,SAAS,GAAGrB,MAAM,CAAT,OAAA,GARJ,EAAA,EASLqB,SAAS,GAAGC,KAAK,CAAR,qBAAA,GAVb,EACS,CADT;AAYE,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMG,KAAK,CAALA,OAAAA,CAAcA,KAAK,CAALA,IAAAA,CAApB,IAAMA,CAAN;AAZX,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EAcGA,KAAK,CAALA,gBAAAA,GACCA,KAAK,CAALA,gBAAAA,CAAuBA,KAAK,CAD7BA,IACCA,CADDA,GAGC,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,KAAK,EAAER,QAAQ,GAAA,OAAA,GADZ;AACL,KADK,EAELI,KAAK,CAFA,YAAA,EAGLE,OAAO,GAAGF,KAAK,CAAR,cAAA,GAHF,EAAA,EAILJ,QAAQ,GAAGI,KAAK,CAAR,kBAAA,GALZ,EACS,CADT;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EAQGC,IAAI,CA1Bb,OA0BSA,EARH,CAjBJ,CADF;AArCQP,CAAAA,EAqEV,UAAA,SAAA,EAAA,SAAA,EAA0B;AACxB,SACEW,SAAS,CAATA,IAAAA,CAAAA,QAAAA,KAA4BC,SAAS,CAATA,IAAAA,CAA5BD,QAAAA,IACAA,SAAS,CAATA,IAAAA,CAAAA,SAAAA,KAA6BC,SAAS,CAATA,IAAAA,CAD7BD,SAAAA,IAEAA,SAAS,CAATA,IAAAA,CAAAA,WAAAA,KAA+BC,SAAS,CAATA,IAAAA,CAF/BD,WAAAA,IAGAA,SAAS,CAATA,IAAAA,CAAAA,SAAAA,KAA6BC,SAAS,CAATA,IAAAA,CAH7BD,SAAAA,IAIAA,SAAS,CAATA,gBAAAA,KAA+BC,SAAS,CAL1C,gBAAA;AAtEJ,CAAYZ,CAAZ;;eAgFea,G","sourcesContent":["import React, { ComponentType } from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { DayType, ThemeType } from '../../types';\n\nconst styles = StyleSheet.create({\n  activeDate: {\n    backgroundColor: '#3b5998',\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    flex: 1,\n    marginVertical: 5,\n    paddingVertical: 10,\n  },\n  endDate: {\n    borderBottomRightRadius: 60,\n    borderTopRightRadius: 60,\n  },\n  startDate: {\n    borderBottomLeftRadius: 60,\n    borderTopLeftRadius: 60,\n  },\n});\n\ninterface NonTouchableDayProps {\n  date: Date;\n  isActive: boolean;\n  isMonthDate: boolean;\n  isOutOfRange: boolean;\n  isStartDate: boolean;\n  isEndDate: boolean;\n  isVisible: boolean;\n  isToday: boolean;\n  theme: ThemeType;\n}\n\nconst NonTouchableDay = React.memo<NonTouchableDayProps>(\n  (props: NonTouchableDayProps) => {\n    const {\n      isMonthDate,\n      isActive,\n      isOutOfRange,\n      isStartDate,\n      isEndDate,\n      theme,\n      date,\n      isToday,\n    } = props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          theme.nonTouchableDayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isOutOfRange ? theme.dayOutOfRangeContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n        ]}\n      >\n        <Text\n          style={[\n            { color: '#d3d3d3' },\n            theme.nonTouchableDayTextStyle,\n            isMonthDate ? theme.nonTouchableLastMonthDayTextStyle : {},\n            isToday ? theme.todayTextStyle : {},\n            isOutOfRange ? theme.dayOutOfRangeTextStyle : {},\n          ]}\n        >\n          {date.getDate()}\n        </Text>\n      </View>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.isActive === nextProps.isActive &&\n      prevProps.isVisible === nextProps.isVisible &&\n      prevProps.isStartDate === nextProps.isStartDate &&\n      prevProps.isEndDate === nextProps.isEndDate\n    );\n  }\n);\n\ninterface Props {\n  onPress: (date: Date) => void;\n  item: DayType;\n  theme: ThemeType;\n  renderDayContent?: (day: DayType) => ComponentType;\n}\n\nconst Day = React.memo<Props>(\n  (props: Props) => {\n    const {\n      item: {\n        date,\n        isVisible,\n        isActive,\n        isStartDate,\n        isEndDate,\n        isMonthDate,\n        isOutOfRange,\n        isToday,\n        isHidden,\n      },\n      theme,\n    } = props;\n\n    if (isHidden) {\n      return <View style={[styles.container]} />;\n    }\n\n    if (!isVisible) {\n      return (\n        <NonTouchableDay\n          isActive={isActive}\n          date={date}\n          theme={theme}\n          isMonthDate={isMonthDate}\n          isOutOfRange={isOutOfRange}\n          isStartDate={isStartDate}\n          isEndDate={isEndDate}\n          isVisible={isVisible}\n          isToday={isToday}\n        />\n      );\n    }\n\n    return (\n      <TouchableOpacity\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n        ]}\n        onPress={() => props.onPress(props.item.date)}\n      >\n        {props.renderDayContent ? (\n          props.renderDayContent(props.item)\n        ) : (\n          <Text\n            style={[\n              { color: isActive ? 'white' : 'black' },\n              theme.dayTextStyle,\n              isToday ? theme.todayTextStyle : {},\n              isActive ? theme.activeDayTextStyle : {},\n            ]}\n          >\n            {date.getDate()}\n          </Text>\n        )}\n      </TouchableOpacity>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.item.isActive === nextProps.item.isActive &&\n      prevProps.item.isVisible === nextProps.item.isVisible &&\n      prevProps.item.isStartDate === nextProps.item.isStartDate &&\n      prevProps.item.isEndDate === nextProps.item.isEndDate &&\n      prevProps.renderDayContent === nextProps.renderDayContent\n    );\n  }\n);\n\nexport default Day;\n"]},"metadata":{},"sourceType":"script"}